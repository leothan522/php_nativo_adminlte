<?php

namespace app\controller;

use app\middleware\Admin;
use app\model\Municipio;
use app\model\User;

class UsersController extends Admin
{
    public string $TITTLE = 'Usuarios';
    public string $MODULO = 'usuarios.index';

    public $links;
    public $rows;
    public $limit;
    public $totalRows;
    public $offset;
    public $pag = 0;

    public function isAdmin()
    {
        parent::isAdmin(); // TODO: Change the autogenerated stub
        if (!validarPermisos($this->MODULO)) {
            header('location: ' . ROOT_PATH . 'admin\\');
        }
    }

    public function index(
        $baseURL = '_request/UsersRequest.php',
        $tableID = 'tabla_usuarios',
        $limit = null,
        $totalRows = null,
        $offset = null
    )
    {
        $model = new User();

        if (is_null($limit)) {
            $this->limit = numRowsPaginate();
        } else {
            $this->limit = $limit;
        }
        if (is_null($totalRows)) {
            $this->totalRows = $model->count(1);
        } else {
            $this->totalRows = $totalRows;
        }
        $this->offset = $offset;

        $this->links = paginate(
            $baseURL,
            $tableID,
            $this->limit,
            $this->totalRows,
            $offset
        )->createLinks();

        $this->rows = $model->paginate(
            $this->limit,
            $offset,
            'id',
            'DESC',
            1
        );


    }

    public function store($name, $email, $password, $telefono, $tipo): array
    {

        $model = new User();
        $created_at = date('Y-m-d');
        $existeEmail = $model->existe('email', '=', $email, null, 1);

        if (!$existeEmail) {

            $data = [
                $name,
                $email,
                $password,
                $telefono,
                $tipo,
                $created_at
            ];

            $model->save($data);

            $user = $model->first('email', '=', $email);
            $response = crearResponse(
                null,
                true,
                'Usuario Creado Exitosamente.',
                "Usuario Creado " . $name
            );
            //datos extras para el $response
            $response['id'] = $user['id'];
            $response['name'] = $user['name'];
            $response['email'] = $user['email'];
            $response['telefono'] = '<p class="text-center">' . $user['telefono'] . '</p>';
            $response['role'] = '<p class="text-center">' . verRoleUsuario($user['role']) . '</p>';
            $response['item'] = '<p class="text-center">' . $model->count(1) . '</p>';
            $response['estatus'] = '<p class="text-center">' . verEstatusUsuario($user['estatus']) . '</p>';
            $response['total'] = $model->count(1);
            $response['btn_editar'] = validarPermisos('usuarios.edit');
            $response['btn_eliminar'] = validarPermisos('usuarios.destroy');
            $response['btn_permisos'] = validarPermisos();

        } else {
            $response = crearResponse(
                'email_duplicado',
                false,
                'Email Duplicado.',
                'El email ya esta registrado.',
                'warning'
            );
        }

        return $response;
    }


}